// # 아이템 66. 네이티브 메서드는 신중히 사용하라
// - 자바 네이티브 인터페이스(JNI)는 자바 프로그램이 네이티브 메서드를 호출하는 기술이다.
//
// [네이티브 메서드]
// - C, C++ 같은 네이티브 프로그래밍 언어로 작성한 메서드를 말한다.
//   즉 CPU와 OS에 맞춰 컴파일된 기계어 코드다.
//   보통 .lib, .dll, .so 같은 라이브러리 파일에 들어 있다.
//
// [네이티브 메서드를 사용할 때]
// - 레지스트리 같은 플랫폼 특화 기능을 사용할 경우
// - 네이티브 코드로 작성된 기존 라이브러리를 사용할 경우
// - 성능 개선을 목적으로 성능에 결정적인 영향을 주는 영역만 따로 네이티브 언어로 작성한 경우
// - 대체할 만한 자바 라이브러리가 없는 경우
//

package effectivejava.ch09.item66.exam01;

// [주제] 네이티브 메서드 활용시 주의할 점
// - 성능을 개선할 목적으로 네이티브 메서드를 사용하는 것은 거의 권장하지 않는다.
//   Java 버전에 올라가면서 지속적으로 네이티브에 가깝게 성능 개선이 이루어지고 있다.
//   다만 고성능의 다중 정밀 연산이 필요한 경우
//   "GNU 다중 정밀 연산 라이브러리(GMP)"를 사용하는 걸 고려해도 된다.
//   이 부분은 아직 자바보다 더 성능이 좋다.
// - 네이티브 언어가 안전하지 않으므로
//   네이티브 메서드를 사용하는 애플리케이션도 메모리 훼손 오류로부터 더 이상 안전하지 않다.
// - 네이티브 언어는 플랫폼을 많이 타서 이식성도 낮고 디버깅도 어렵다.
//   주의하지 않으면 오히려 느려질 수 있다.
// - 가비지 컬렉터가 네이티브 메모리는 자동 회수하지 못하고, 심지어 추적조차 할 수 없다.
// - 자바 코드와 네이티브 경계를 넘나들 때마다 비용도 추가된다.
// - 네이티브 메서드와 자바 코드 사이에 '접착 코드'를 작성해야 하는데 귀찮은 작업이며 가독성도 떨어진다.
//

public class Test {
  public static void main(String[] args) throws Exception {}
}
